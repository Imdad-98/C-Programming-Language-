#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <time.h>

#define MAX_WORDS 100
#define MAX_NAME_LENGTH 50
#define WORD_COUNT 42
#define MAX_WORD_LENGTH 5

// Structure for storing the score
typedef struct {
    char challengerName[MAX_NAME_LENGTH];
    int challengerWords;
    int challengerTime;
    char targetName[MAX_NAME_LENGTH];
    int targetWords;
    int targetTime;
} Score;

// Global array for storing the words
char words[MAX_WORDS][MAX_WORD_LENGTH];

// Function prototypes
void loadWords();
void shuffleWord(char selectedWords[WORD_COUNT][MAX_WORD_LENGTH]);
void playGame(char *challengerName, char *targetName);
void evalGame(Score *score, char *challengerName, int challengerWords, int challengerTime, char *targetName, int targetWords, int targetTime);
void displayWinner(Score *score);
void doWordRelay();
void startGame(char *challengerName, char *targetName);

int main() {
    // Initialize the game by loading words from words.txt
    loadWords();

    // Call the word relay function
    doWordRelay();

    return 0;
}

void loadWords() {
    FILE *file = fopen("words.txt", "r");
    if (file == NULL) {
        printf("Error opening words.txt file!\n");
        exit(1);
    }

    // Read 100 words from the file into the global words array
    for (int i = 0; i < MAX_WORDS; i++) {
        fscanf(file, "%s", words[i]);
    }

    fclose(file);
}

void shuffleWord(char selectedWords[WORD_COUNT][MAX_WORD_LENGTH]) {
    srand(time(NULL));
    // Shuffle the selected words randomly
    for (int i = 0; i < WORD_COUNT; i++) {
        int randomIndex = rand() % WORD_COUNT;
        char temp[MAX_WORD_LENGTH];
        strcpy(temp, selectedWords[i]);
        strcpy(selectedWords[i], selectedWords[randomIndex]);
        strcpy(selectedWords[randomIndex], temp);
    }
}

void evalGame(Score *score, char *challengerName, int challengerWords, int challengerTime, char *targetName, int targetWords, int targetTime) {
    // Store the game results in the score structure
    strcpy(score->challengerName, challengerName);
    score->challengerWords = challengerWords;
    score->challengerTime = challengerTime;
    strcpy(score->targetName, targetName);
    score->targetWords = targetWords;
    score->targetTime = targetTime;
}

void displayWinner(Score *score) {
    printf("\nGame Results:\n");

    if (score->challengerWords > score->targetWords || 
        (score->challengerWords == score->targetWords && score->challengerTime < score->targetTime)) {
        printf("Winner: %s\n", score->challengerName);
        printf("Challenger: %s, Words: %d, Time: %d seconds\n", score->challengerName, score->challengerWords, score->challengerTime);
        printf("Target: %s, Words: %d, Time: %d seconds\n", score->targetName, score->targetWords, score->targetTime);
    } else {
        printf("Winner: %s\n", score->targetName);
        printf("Challenger: %s, Words: %d, Time: %d seconds\n", score->challengerName, score->challengerWords, score->challengerTime);
        printf("Target: %s, Words: %d, Time: %d seconds\n", score->targetName, score->targetWords, score->targetTime);
    }
}

void startGame(char *challengerName, char *targetName) {
    char selectedWords[WORD_COUNT][MAX_WORD_LENGTH];
    int challengerWords = 0, challengerTime = 0, targetWords = 0, targetTime = 0;

    // Randomly select 42 words from the list
    srand(time(NULL));
    for (int i = 0; i < WORD_COUNT; i++) {
        int randomIndex = rand() % MAX_WORDS;
        strcpy(selectedWords[i], words[randomIndex]);
    }

    shuffleWord(selectedWords);

    printf("\nPress Enter to start the game!\n");
    getchar();  // wait for Enter key to start

    // Start measuring time for challenger
    clock_t startTime = clock();
    printf("Challenger's turn:\n");
    for (int i = 0; i < WORD_COUNT; i++) {
        printf("Word %d: %s\n", i + 1, selectedWords[i]);
        challengerWords++; // Count words guessed
    }

    clock_t endTime = clock();
    challengerTime = (int)((endTime - startTime) / CLOCKS_PER_SEC);

    // Start measuring time for target
    printf("\nTarget's turn:\n");
    for (int i = 0; i < WORD_COUNT; i++) {
        printf("Word %d: %s\n", i + 1, selectedWords[i]);
        targetWords++; // Count words guessed
    }

    endTime = clock();
    targetTime = (int)((endTime - startTime) / CLOCKS_PER_SEC);

    // Update the score structure
    Score score;
    evalGame(&score, challengerName, challengerWords, challengerTime, targetName, targetWords, targetTime);
    
    // Display the winner
    displayWinner(&score);
}

void doWordRelay() {
    char challengerName[MAX_NAME_LENGTH], targetName[MAX_NAME_LENGTH];

    // Get names of the challenger and target
    printf("Enter the name of the challenger (MillieWays member nickname): ");
    scanf("%s", challengerName);
    printf("Enter the name of the target (MillieWays member nickname): ");
    scanf("%s", targetName);

    // Start the game
    startGame(challengerName, targetName);
}
